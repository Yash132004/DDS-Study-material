#include <stdio.h>

#define SIZE 7 // Defining constant

int stack[SIZE], limit = SIZE - 1, top = -1;

void push();
void pop();
void display();
void swap(int pos1, int pos2);
void change(int pos, int val); // Change the value at a valid given index

int main() {
    int choice, ind1, ind2, position, newValue;
    do {
        printf("\n--- Stack Operations Menu ---");
        printf("\n 1. Push");
        printf("\n 2. Pop");
        printf("\n 3. Display");
        printf("\n 4. Swap Elements");
        printf("\n 5. Change Element");
        printf("\n 6. Exit");
        printf("\n-----------------------------");
        printf("\n Enter your choice (1-6): ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                push();
                break;
            case 2:
                pop();
                break;
            case 3:
                display();
                break;
            case 4:
                if (top == -1) {
                    printf("\nStack Underflow...No elements to swap.\n");
                } else if (top < 1) { // Need at least two elements to swap
                    printf("\nNot enough elements to swap. Need at least 2.\n");
                } else {
                    printf("Enter the first position to swap (0 to %d): ", top);
                    scanf("%d", &ind1);
                    printf("Enter the second position to swap (0 to %d): ", top);
                    scanf("%d", &ind2);
                    swap(ind1, ind2);
                }
                break;
            case 5:
                if (top == -1) {
                    printf("\nStack Underflow...No elements to change.\n");
                } else {
                    printf("Enter the position to change (0 to %d): ", top);
                    scanf("%d", &position);
                    printf("Enter the new value: ");
                    scanf("%d", &newValue);
                    change(position, newValue);
                }
                break;
            case 6:
                printf("\n* * * END OF PROGRAM * * *\n");
                break;
            default:
                printf("\nInvalid input...Please type a choice from 1 to 6.\n");
                break;
        }
    } while (choice != 6);

    return 0;
}

void push() {
    if (top >= limit) { // Checking for overflow
        printf("\nStack Overflow...No space for new elements.\n");
    } else {
        top++;
        printf("Enter a value to push: ");
        scanf("%d", &stack[top]);
        printf("%d pushed to stack.\n", stack[top]);
    }
}

void pop() {
    if (top == -1) { // Checking for underflow
        printf("\nStack Underflow...No elements to pop.\n");
    } else {
        printf("\nPopping element: %d\n", stack[top]);
        top--;
    }
}

void display() {
    int index;
    if (top == -1) { // Checking for underflow
        printf("\nStack Underflow...No elements to display.\n");
    } else {
        printf("\n--- Stack Elements ---\n");
        for (index = 0; index <= top; index++) {
            printf(" %d\n", stack[index]);
        }
        printf("----------------------\n");
    }
}

void swap(int pos1, int pos2) {
    int temp;
    if (pos1 >= 0 && pos1 <= top && pos2 >= 0 && pos2 <= top) {
        // Ensure pos1 is less than or equal to pos2 for consistent message,
        // although swap works regardless of order
        if (pos1 > pos2) {
            // Swap positions if they are entered in reverse order
            int tempPos = pos1;
            pos1 = pos2;
            pos2 = tempPos;
        }

        // Using a temporary variable for swapping
        temp = stack[pos1];
        stack[pos1] = stack[pos2];
        stack[pos2] = temp;
        printf("\nElements at positions %d and %d swapped successfully.\n", pos1, pos2);
    } else {
        printf("Invalid index positions. Please enter positions between 0 and %d.\n", top);
    }
}

void change(int pos, int val) {
    if (pos >= 0 && pos <= top) {
        stack[pos] = val;
        printf("\nValue at position %d changed to %d successfully.\n", pos, val);
    } else {
        printf("Invalid position. Please enter a position between 0 and %d.\n", top);
    }
}
